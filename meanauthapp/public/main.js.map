{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/about/about.component.css","webpack:///./src/app/components/about/about.component.html","webpack:///./src/app/components/about/about.component.ts","webpack:///./src/app/components/blog/blog.component.css","webpack:///./src/app/components/blog/blog.component.html","webpack:///./src/app/components/blog/blog.component.ts","webpack:///./src/app/components/cert/cert.component.css","webpack:///./src/app/components/cert/cert.component.html","webpack:///./src/app/components/cert/cert.component.ts","webpack:///./src/app/components/dashboard/dashboard.component.css","webpack:///./src/app/components/dashboard/dashboard.component.html","webpack:///./src/app/components/dashboard/dashboard.component.ts","webpack:///./src/app/components/encrypt/encrypt.component.css","webpack:///./src/app/components/encrypt/encrypt.component.html","webpack:///./src/app/components/encrypt/encrypt.component.ts","webpack:///./src/app/components/home/home.component.css","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/login/login.component.css","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/mac/mac.component.css","webpack:///./src/app/components/mac/mac.component.html","webpack:///./src/app/components/mac/mac.component.ts","webpack:///./src/app/components/movie/movie.component.css","webpack:///./src/app/components/movie/movie.component.html","webpack:///./src/app/components/movie/movie.component.ts","webpack:///./src/app/components/navbar/navbar.component.css","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/components/profile/profile.component.css","webpack:///./src/app/components/profile/profile.component.html","webpack:///./src/app/components/profile/profile.component.ts","webpack:///./src/app/components/register/register.component.css","webpack:///./src/app/components/register/register.component.html","webpack:///./src/app/components/register/register.component.ts","webpack:///./src/app/components/search/search.component.css","webpack:///./src/app/components/search/search.component.html","webpack:///./src/app/components/search/search.component.ts","webpack:///./src/app/components/useritem/useritem.component.css","webpack:///./src/app/components/useritem/useritem.component.html","webpack:///./src/app/components/useritem/useritem.component.ts","webpack:///./src/app/components/userlist/userlist.component.css","webpack:///./src/app/components/userlist/userlist.component.html","webpack:///./src/app/components/userlist/userlist.component.ts","webpack:///./src/app/guards/auth.guard.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/movie.service.ts","webpack:///./src/app/services/validate.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///crypto (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-navbar></app-navbar>\\n<div class=\\\"container\\\">\\n  <flash-messages></flash-messages>\\n  <router-outlet></router-outlet>\\n</div>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent {\n  title = 'my-dream-app';\n\n}\n","//모듈\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router'\nimport { FlashMessagesModule } from 'angular2-flash-messages';\nimport { HttpModule } from '@angular/http';\n//컴포넌트\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { UserlistComponent } from './components/userlist/userlist.component';\nimport { UseritemComponent } from './components/useritem/useritem.component';\nimport { MovieComponent } from './components/movie/movie.component';\nimport { EncryptComponent } from './components/encrypt/encrypt.component';\nimport { MacComponent } from './components/mac/mac.component';\nimport { BlogComponent } from './components/blog/blog.component';\nimport { AboutComponent } from './components/about/about.component';\n//서비스\nimport { ValidateService } from './services/validate.service';\nimport { AuthService } from './services/auth.service';\nimport { AuthGuard } from './guards/auth.guard';\nimport { CertComponent } from './components/cert/cert.component';\nimport { SearchComponent } from './components/search/search.component';\n\n\n\n\nconst appRoutes:Routes = [\n  {path:'', component:HomeComponent},\n  {path:'register', component:RegisterComponent},\n  {path:'login', component:LoginComponent},\n  {path:'dashboard', component:DashboardComponent, canActivate:[AuthGuard]},\n  {path:'profile', component:ProfileComponent, canActivate:[AuthGuard]},\n  {path:'useritem', component:UseritemComponent},\n  {path:'userlist', component:UserlistComponent},\n  {path:'movie', component:MovieComponent},\n  {path:'about', component:AboutComponent},\n  {path:'blog', component:BlogComponent, canActivate:[AuthGuard]},\n  {path:'encrypt', component:EncryptComponent, canActivate:[AuthGuard]},\n  {path:'mac', component:MacComponent, canActivate:[AuthGuard]},\n  {path:'cert', component:CertComponent, canActivate:[AuthGuard]},\n  {path:'search', component:SearchComponent},\n]\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    LoginComponent,\n    RegisterComponent,\n    HomeComponent,\n    DashboardComponent,\n    ProfileComponent,\n    UserlistComponent,\n    UseritemComponent,\n    MovieComponent,\n    EncryptComponent,\n    MacComponent,\n    BlogComponent,\n    AboutComponent,\n    CertComponent,\n    SearchComponent\n  ],\n  imports: [\n    BrowserModule,\n    RouterModule.forRoot(appRoutes),\n    FormsModule,\n    FlashMessagesModule.forRoot(),\n    HttpModule\n  ],\n  providers: [\n    ValidateService,\n    AuthService,\n    AuthGuard\n  ],\n  bootstrap: [AppComponent]\n\n\n})\n\n\n\nexport class AppModule {\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWJvdXQvYWJvdXQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<p>\\n  about works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYmxvZy9ibG9nLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<p>\\n  blog works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-blog',\n  templateUrl: './blog.component.html',\n  styleUrls: ['./blog.component.css']\n})\nexport class BlogComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY2VydC9jZXJ0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div>\\n  <h2 class = \\\"page-header\\\">인증서 발급 (Cert) <small>로그인할 사용자에게 인증서를 발급합니다. </small></h2>\\n\\n  <h4>여기에서 자동으로 발급되는 인증서는 사설인증서로 이 서버에 접속하는 용도로만 사용합니다. </h4>\\n  <h4>서버는 인증서를 저장하지 않으며 사용자는 언제들이 재발급 받을 수 있습니다. </h4>\\n  <h4>전자서명 로그인 시 인증서 정보와 ID가 다르면 로그인 할 수 없습니다. </h4>\\n  <h4>그러므로 Common Name(이름)은 로그인한 사용자의 ID(username)와 동일해야합니다. </h4>\\n  <br><br>\\n  <form (submit)=\\\"onCertRequest()\\\">\\n    <div class=\\\"form-group\\\">\\n      <label>Common Name(이름) = ID(username)</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"common\\\" name=\\\"common\\\">\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label>Organizational Unit Name (부서)</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"orgUnit\\\" name=\\\"orgUnit\\\">\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label>Organization Name (기관)</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"organization\\\" name=\\\"organization\\\">\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label>Locality Name (도시)</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"locality\\\" name=\\\"Locality\\\">\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label>State or Province Name (지역)</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"state\\\" name=\\\"state\\\">\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label>Country Name (국가)</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"country\\\" name=\\\"country\\\">\\n    </div>\\n    <input type=\\\"submit\\\" name=\\\"btn-btn-primary\\\" value=\\\"인증서 발급 요청\\\">\\n  </form>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport * as forge from \"node-forge\";\n\n@Component({\n  selector: 'app-cert',\n  templateUrl: './cert.component.html',\n  styleUrls: ['./cert.component.css']\n})\nexport class CertComponent implements OnInit {\n  country: string;\n  state: string;\n  locality: string;\n  organization: string;\n  orgUnit: string;\n  common: string;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private flashMessage: FlashMessagesService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  onCertRequest() {\n    const request = {\n      country: this.country,\n      state: this.state,\n      locality: this.locality,\n      organization: this.organization,\n      orgUnit: this.orgUnit,\n      common: this.common\n    }\n\n    this.authService.certRequest(request).subscribe(data => {\n      if (data.success) {\n        this.authService.storeCert(data.cert, data.caCert);\n        this.flashMessage.show('인증서가 발급되었습니다', {\n          cssClass: 'alert-success',\n          timeout: 5000\n        });\n        this.router.navigate(['dashboard']);\n      } else {\n        this.flashMessage.show('뭔가 잘못되었군요. 인증서가 발급되지 않았습니다', {\n          cssClass: 'alert-danger',\n          timeout: 5000\n        });\n        this.router.navigate(['cert']);\n      }\n    });\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"alert alert-success\\\">\\n  <h4 class=\\\"page-header\\\">공개토큰/비밀토큰 발급</h4>\\n  <div class=\\\"form-group\\\">\\n    <label>공개토큰(Public Token) - 서비스 요청 시 사용자 정보 제공을 위해 서버로 전송됨</label>\\n    <textarea class=\\\"form-control\\\" [(ngModel)]=\\\"ptoken\\\" name=\\\"ptoken\\\" rows=\\\"8\\\" cols=\\\"80\\\" readonly></textarea>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label>비밀토큰(Secret Token) - 난수화 인증정보 계산에 사용되며 외부로는 전송되지 않음</label>\\n    <textarea class=\\\"form-control\\\" [(ngModel)]=\\\"stoken\\\" name=\\\"stoken\\\" rows=\\\"8\\\" cols=\\\"80\\\" readonly></textarea>\\n  </div>\\n\\n  <h4 class=\\\"page-header\\\">인증서 발급</h4>\\n  <div class=\\\"form-group\\\">\\n    <label>사용자 인증서</label>\\n    <textarea class=\\\"form-control\\\" [(ngModel)]=\\\"certPem\\\" name=\\\"certPem\\\" rows=\\\"8\\\" cols=\\\"80\\\" readonly></textarea>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label>CA 인증서</label>\\n    <textarea class=\\\"form-group\\\" [(ngModel)]=\\\"caCertPem\\\" name=\\\"caCertPem\\\" rows=\\\"8\\\" cols=\\\"80\\\" readonly></textarea>\\n  </div>\\n  <p>인증서 유효검증 : {{verify}}</p>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport * as forge from 'node-forge';\nconst pki = forge.pki;\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n  ptoken:string;\n  stoken:string;\n  certPem:string;\n  caCertPem:string;\n  verify:string;\n\n  constructor(\n    private authService:AuthService\n  ) { }\n\n  ngOnInit() {\n    const ptoken = localStorage.getItem('id_ptoken');\n    const stoken = localStorage.getItem('id_stoken');\n    this.ptoken = ptoken;\n    this.stoken = stoken;\n    this.certPem = localStorage.getItem('cert');\n    this.caCertPem = localStorage.getItem('caCert');\n    var cert = pki.certificateFromPem(localStorage.getItem('cert'));\n    var caCert = pki.certificateFromPem(localStorage.getItem('caCert'));\n    this.verify = caCert.verify(cert);\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZW5jcnlwdC9lbmNyeXB0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div>\\r\\n  <h2 class=\\\"page-header\\\">메시지 암호화 전송<small>난수화 인증 정보를 일회용 비밀키로 이용</small></h2>\\r\\n\\r\\n  <div class=\\\"alert alert-info\\\" role=\\\"alert\\\">\\r\\n    <h4>\\r\\n      이 페이지에서는 난수화 인증정보를 일회용 비밀키로 이용하여 사용자가 입력하는 정보를\\r\\n      암호화하여 서버에게 전송하는 것을 보여줍니다. 서버는 동일한 일회용 비밀키를 생성할 수 있으며 암호문을\\r\\n      복호화하여 응답합니다 .\\r\\n    </h4>\\r\\n  </div>\\r\\n  <hr>\\r\\n  <form (submit)=\\\"onEncryptSubmit()\\\">\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label>서버로 전송할 메시지를 입력하세요. </label>\\r\\n        <textarea class=\\\"form-control\\\" [(ngModel)]=\\\"plaintext\\\" name=\\\"plaintext\\\" rows=\\\"4\\\" cols=\\\"80\\\"></textarea>\\r\\n    </div>\\r\\n    <input type=\\\"submit\\\" class=\\\"btn btn-primary\\\" value=\\\"메시지 전송\\\">\\r\\n  </form>\\r\\n  <hr>\\r\\n  <div class=\\\"alert alert-info\\\" role=\\\"alert\\\">\\r\\n    <h4>생성된 일회용 비밀키 (서버로 전송되지 않음)</h4>\\r\\n    <p>{{key}}</p>\\r\\n  </div>\\r\\n  <div class = \\\"alert alert-warning\\\" role=\\\"alert\\\">\\r\\n    <h4>서버로 전송되는 메시지</h4>\\r\\n    <p>공개토큰 : {{ptoken}}</p>\\r\\n    <p>현재시간 : {{currT}}</p>\\r\\n    <p>암호문 : {{encrypted}}</p>\\r\\n  </div>\\r\\n  <div class=\\\"alert alert-success\\\" role=\\\"alert\\\">\\r\\n    <h4>서버가 복호화하여 응답한 메시지</h4>\\r\\n    <p>{{decrypted}}</p>\\r\\n  </div>\\r\\n  <p>같은 메시지를 여러번 전송해보세요. <br>암호문이 매번 바뀌며 전송되는 것을 볼 수 있습니다. </p>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport * as forge from 'node-forge';\n\n@Component({\n  selector: 'app-encrypt',\n  templateUrl: './encrypt.component.html',\n  styleUrls: ['./encrypt.component.css']\n})\nexport class EncryptComponent implements OnInit {\n  plaintext: string;\n  currT: any;\n  ptoken: any;\n  stoken: any;\n  key: any;\n  encrypted: any;\n  decrypted: any;\n\n  constructor(\n    private authService: AuthService,\n    private flashMessage: FlashMessagesService\n  ) { }\n  ngOnInit() {\n  }\n  onEncryptSubmit() {\n    this.currT = this.authService.getCurrTime();\n    this.ptoken = this.authService.getPubToken();\n    this.stoken = this.authService.getSecToken();\n    this.key = this.authService.getKey(this.currT, this.stoken);\n    this.encrypted = this.authService.getEncrypt(this.plaintext, this.key);\n\n    this.authService.encryptedMessage(this.encrypted, this.currT, this.ptoken).subscribe(data => {\n      if (data.decrypted) {\n        this.decrypted = forge.util.decodeUtf8(data.decrypted.data);\n      }\n    });\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaG9tZS9ob21lLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"jumbotron text-center\\\">\\n  <h1>MEAN Authentication App</h1>\\n  <p class=\\\"lead\\\">Welcome to our custom MEAN authentication app</p>\\n  <div>\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/register']\\\">Register</button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-success\\\" [routerLink]=\\\"['/login']\\\">Login</button>\\n  </div>\\n</div>\\n  <div class=\\\"container-fluid\\\">\\n<div class=\\\"row\\\">\\n  <div class=\\\"col\\\">\\n    <h3>박스오피스 현황</h3>\\n<a class=\\\"text-primary\\\" [routerLink]=\\\"['/movie']\\\" >박스오피스 바로가기</a>\\n  </div>\\n  <div class=\\\"col\\\">\\n    <h3>영화 검색 서비스</h3>\\n    <a class=\\\"text-primary\\\" [routerLink]=\\\"['/search']\\\">영화 검색 서비스 바로가기</a>\\n  </div>\\n  <div class=\\\"col\\\">\\n    <h3>JWT Tokens</h3>\\n    <p>Full featured authentication using JSON web tokens. Login and store user data</p>\\n  </div>\\n</div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<h2 class=\\\"page-header\\\">Login </h2>\\n<form (submit)=\\\"onLoginSubmit()\\\">\\n  <div class=\\\"form-group\\\">\\n    <label>Username</label>\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"username\\\" name=\\\"username\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label>Password</label>\\n    <input type=\\\"password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"password\\\" name=\\\"password\\\">\\n  </div>\\n  <input type=\\\"submit\\\" class=\\\"btn btn-primary\\\" value=\\\"Login (로그인)\\\">\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  username: string;\n  password: string;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private flashMessage: FlashMessagesService\n  ) { }\n\n  ngOnInit() {\n  }\n  onLoginSubmit() {\n    const user = {\n      username: this.username,\n      password: this.password\n    }\n    this.authService.authenticateUser(user).subscribe(data => {\n      if (data.success) {\n        this.authService.storeUserData(data.ptoken, data.stoken, data.user);\n        this.flashMessage.show('You are now logged in', { cssClass: 'alert-success', timeout: 5000 });\n        this.router.navigate(['dashboard']);\n      } else {\n        this.flashMessage.show(data.msg, { cssClass: 'alert-danger', timeout: 5000 });\n        this.router.navigate(['login']);\n      }\n    });\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbWFjL21hYy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<p>\\n  mac works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-mac',\n  templateUrl: './mac.component.html',\n  styleUrls: ['./mac.component.css']\n})\nexport class MacComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbW92aWUvbW92aWUuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=container-fluid>\\r\\n  <h1>Today's BoxOffice</h1>\\r\\n  <p>{{year}}년 {{month}}월 {{date}}일 기준</p>\\r\\n  <div class=container>\\r\\n      <div class=\\\"col\\\" *ngIf=\\\"loading\\\">\\r\\n      <p>로딩중....</p>\\r\\n      <div class=\\\"progress\\\">\\r\\n        <div class=\\\"progress-bar progress-bar-striped progress-bar-animated\\\" role=\\\"progressbar\\\" aria-valuenow=\\\"100\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\" style=\\\"width: 100%\\\"></div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <table class=\\\"table table-hover\\\" *ngIf=!loading>\\r\\n    <thead>\\r\\n      <tr>\\r\\n        <th scope=\\\"col\\\">순위</th>\\r\\n        <th scope=\\\"col\\\">포스터</th>\\r\\n        <th scope=\\\"col\\\">영화 제목</th>\\r\\n        <th scope=\\\"col\\\">관객 수</th>\\r\\n      </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n      <tr class=\\\"table-active\\\" *ngFor=\\\"let i of array\\\">\\r\\n        <th scope=\\\"row\\\" >{{i+1}}위</th>\\r\\n        <td><img src=\\\"https://image.tmdb.org/t/p/w185_and_h278_bestv2{{ImgResult.poster}}\\\" alt=\\\"\\\"></td>\\r\\n        <td>{{kobisResult.boxOfficeResult.dailyBoxOfficeList[i].movieNm}}</td>\\r\\n        <td>{{kobisResult.boxOfficeResult.dailyBoxOfficeList[i].audiAcc}} 명</td>\\r\\n      </tr>\\r\\n    </tbody>\\r\\n  </table>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Http, Headers, Response } from '@angular/http';\nimport { map } from \"rxjs/operators\";\nimport { MovieService } from \"../../services/movie.service\";\n\n@Component({\n  selector: 'app-movie',\n  templateUrl: './movie.component.html',\n  styleUrls: ['./movie.component.css']\n})\n\n\n\nexport class MovieComponent {\n  year:Number;\n  month:Number;\n  date: Number;\n  today: string;\n  key: string = \"925bf1af1aa0b15698bc7b15ad69eff6\";\n  kobisUrl: string = \"http://www.kobis.or.kr/kobisopenapi/webservice/rest/boxoffice/searchDailyBoxOfficeList.json?key=925bf1af1aa0b15698bc7b15ad69eff6&targetDt=\";\n  Movie: any;\n  loading: boolean;\n  kobisResult: any;\n  ImgResult: any;\n  array: Array<Number> = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n  title: Array<string>;\n  poster:Array<string> = [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"];\n\n\n\n  constructor(\n    private http: Http,\n    private movieService: MovieService\n  ) {}\n\n  ngOnInit() {\n    this.loading = true;\n    this.getDate();\n    let url = this.kobisUrl + this.today;\n    this.http.get(url).subscribe((res: Response) => {\n      this.kobisResult = res.json();\n\n      for(let i=0; i<10; i++) {\n        let title = {\n          title:this.kobisResult.boxOfficeResult.dailyBoxOfficeList[i].movieNm\n        }\n      this.movieService.getImage(title).subscribe(data => {\n        if(data.success) {\n          this.ImgResult = data.movie;\n          console.log(this.ImgResult.poster);\n        }\n        else {\n          console.log('포스터 가져오기 실패');\n        }\n      });\n      }\n      this.loading = false;\n    });\n\n  }\n\n  getDate() {\n    var date = new Date();\n    var today = date.getDate();\n    this.date = today;\n    today = today - 1;\n    var month = date.getMonth();\n    this.month = month;\n    var year = date.getFullYear();\n    this.year = year;\n    month = month + 1;\n    if (today < 10) {\n      this.today = year.toString() + month.toString() + \"0\" + today.toString();\n    }\n    else {\n      this.today = year.toString() + month.toString() + today.toString();\n    }\n  }\n\n  getImage(){\n    let title;\n    console.log(title);\n    for(let i=0; i<10; i++) {\n      title = this.kobisResult.boxOfficeResult.dailyBoxOfficeList[i].movieNm;\n    this.movieService.getImage(title).subscribe(data => {\n      if(data.success) {\n        console.log(data.detailInfo.poster);\n        this.poster[i] = data.detailInfo;\n      }\n    });\n  }\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbmF2YmFyL25hdmJhci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-primary\\\">\\r\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Zodiac</a>\\r\\n  <button class=\\\"navbar-toggler collapsed\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarColor01\\\" aria-controls=\\\"navbarColor01\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n  </button>\\r\\n  <div class=\\\"navbar-collapse collapse\\\" id=\\\"navbarColor01\\\" style=\\\"\\\">\\r\\n    <!-- 왼쪽-->\\r\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\r\\n      <li class=\\\"nav-item active\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\">\\r\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/']\\\">Home<span></span></a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item active\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\">\\r\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/about']\\\">About<span></span></a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item active\\\" *ngIf=\\\"authService.loggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\">\\r\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/cert']\\\">Cert<span></span></a>\\r\\n      </li>\\r\\n    </ul>\\r\\n    <!-- 오른쪽-->\\r\\n    <ul class=\\\"nav navbar-nav ml-auto\\\">\\r\\n      <li class=\\\"nav-item\\\" *ngIf=\\\"authService.loggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\">\\r\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/dashboard']\\\">Dashboard </a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\" *ngIf=\\\"authService.loggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\">\\r\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/blog']\\\">Blog </a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\" *ngIf=\\\"authService.loggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\">\\r\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/profile']\\\">Profile </a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\" *ngIf=\\\"authService.loggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\">\\r\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/encrypt']\\\">Encrypt </a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\" *ngIf=\\\"authService.loggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\">\\r\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/mac']\\\">Mac </a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\" *ngIf=\\\"!authService.loggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\">\\r\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/login']\\\">Login </a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\" *ngIf=\\\"!authService.loggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\">\\r\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/register']\\\">Register</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\" *ngIf=\\\"authService.loggedIn()\\\">\\r\\n        <a class=\\\"nav-link\\\" (click)=\\\"onLogoutClick()\\\" href=\\\"#\\\">Logout</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item dropdown\\\">\\r\\n        <a class=\\\"nav-link dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" href=\\\"#\\\" id=\\\"Services\\\">Services <span class=\\\"caret\\\"></span></a>\\r\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"Services\\\">\\r\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/movie']\\\">Movie</a>\\r\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/search']\\\">Search</a>\\r\\n          <!--\\r\\n            <a class=\\\"dropdown-item\\\" href=\\\"../cerulean/\\\">Weather</a>\\r\\n            <a class=\\\"dropdown-item\\\" href=\\\"../cosmo/\\\">Cosmo</a>\\r\\n            <a class=\\\"dropdown-item\\\" href=\\\"../cyborg/\\\">Cyborg</a>\\r\\n            <a class=\\\"dropdown-item\\\" href=\\\"../darkly/\\\">Darkly</a>\\r\\n            <a class=\\\"dropdown-item\\\" href=\\\"../flatly/\\\">Flatly</a>\\r\\n            <a class=\\\"dropdown-item\\\" href=\\\"../journal/\\\">Journal</a>\\r\\n            <a class=\\\"dropdown-item\\\" href=\\\"../litera/\\\">Litera</a>\\r\\n            <a class=\\\"dropdown-item\\\" href=\\\"../lumen/\\\">Lumen</a>\\r\\n            <a class=\\\"dropdown-item\\\" href=\\\"../lux/\\\">Lux</a>\\r\\n            <a class=\\\"dropdown-item\\\" href=\\\"../materia/\\\">Materia</a>\\r\\n            <a class=\\\"dropdown-item\\\" href=\\\"../minty/\\\">Minty</a>\\r\\n            <a class=\\\"dropdown-item\\\" href=\\\"../pulse/\\\">Pulse</a>\\r\\n            <a class=\\\"dropdown-item\\\" href=\\\"../sandstone/\\\">Sandstone</a>\\r\\n            <a class=\\\"dropdown-item\\\" href=\\\"../simplex/\\\">Simplex</a>\\r\\n            <a class=\\\"dropdown-item\\\" href=\\\"../sketchy/\\\">Sketchy</a>\\r\\n            <a class=\\\"dropdown-item\\\" href=\\\"../slate/\\\">Slate</a>\\r\\n            <a class=\\\"dropdown-item\\\" href=\\\"../solar/\\\">Solar</a>\\r\\n            <a class=\\\"dropdown-item\\\" href=\\\"../spacelab/\\\">Spacelab</a>\\r\\n            <a class=\\\"dropdown-item\\\" href=\\\"../superhero/\\\">Superhero</a>\\r\\n            <a class=\\\"dropdown-item\\\" href=\\\"../united/\\\">United</a>\\r\\n            <a class=\\\"dropdown-item\\\" href=\\\"../yeti/\\\">Yeti</a>\\r\\n            -->\\r\\n        </div>\\r\\n      </li>\\r\\n    </ul>\\r\\n  </div>\\r\\n</nav>\\r\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private flashMessage: FlashMessagesService\n  ) { }\n\n  ngOnInit() {\n  }\n  onLogoutClick(){\n    this.authService.logout();\n    this.flashMessage.show('You are logged out', {\n      cssClass: 'alert-success',\n      timeout: 3000\n    });\n    this.router.navigate(['/login']);\n    return false;\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcHJvZmlsZS9wcm9maWxlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<p>\\n  profile works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  user: Object;\n  ptoken: any;\n  stoken: any;\n  currT: any;\n  auth: any;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.currT = this.authService.getCurrTime();\n    this.ptoken = this.authService.getPubToken();\n    this.stoken = this.authService.getSecToken();\n    this.auth = this.authService.computeAuth(this.currT, this.stoken);\n    this.authService.getProfile(this.ptoken, this.currT, this.auth).subscribe(profile => {\n      this.user = profile.user;\n    },\n      err => {\n        console.log(err);\n        console.log(this.ptoken);\n        console.log(this.stoken);\n        this.authService.logout();\n        this.router.navigate(['login']);\n        return false;\n      });\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcmVnaXN0ZXIvcmVnaXN0ZXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<h2 class=\\\"page-header\\\">Register (사용자등록)</h2>\\n<form (submit)=\\\"onRegisterSubmit()\\\">\\n  <div class=\\\"form-group\\\">\\n    <label> Name (이름)</label>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"name\\\" name=\\\"name\\\" class=\\\"form-control\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label> Email (이메일)</label>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"email\\\" name=\\\"email\\\" class=\\\"form-control\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label> Username (닉네임)</label>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"username\\\" name=\\\"username\\\" class=\\\"form-control\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label> Password (비밀번호)</label>\\n    <input type=\\\"password\\\" [(ngModel)]=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control\\\">\\n  </div>\\n  <input type=\\\"submit\\\" class=\\\"btn btn-primary\\\" value=\\\"Submit\\\">\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ValidateService } from '../../services/validate.service';\nimport { FlashMessagesService } from 'angular2-flash-messages'\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  name: string;\n  username: string;\n  email: string;\n  password: string;\n \n  constructor(private validateService: ValidateService,\n  private flashMessage:FlashMessagesService,\n  private router: Router,\n  private authService:AuthService\n) { }\n \n  ngOnInit() {\n  }\n \nonRegisterSubmit(){\n    const user = {\n      name: this.name,\n      email: this.email,\n      username: this.username,\n      password: this.password\n    }\n \n    // Required Fields\n    if(!this.validateService.validateRegister(user)){\n      this.flashMessage.show('Please fill in all fields', {cssClass:'alert-danger', timeout:3000});\n      return false;\n    }\n \n    // Validate Email\n    if(!this.validateService.validateEmail(user.email)){\n      this.flashMessage.show('Please use a valid email', {cssClass:'alert-danger', timeout:3000});\n      return false;\n    }\n//Register User\nthis.authService.registerUser(user).subscribe(data => {\n  if(data.success) {\n    this.flashMessage.show('You are now registered and can log in', {cssClass:'alert-success', timeout:3000});\n    this.router.navigate(['/login']);\n  } else {\n    this.flashMessage.show('Something went wrong', {cssClass:'alert-success', timeout:3000});\n    this.router.navigate(['/register']);\n  }\n});\n  }\n \n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvc2VhcmNoL3NlYXJjaC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=container-fluid>\\r\\n  <h1>영화 검색 서비스</h1>\\r\\n    <form (submit)=\\\"searchMovie()\\\" *ngIf=\\\"!searched\\\">\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label>검색 할 영화를 입력하세요. <br>한글검색은 한국영화만 검색이 가능합니다. <br>정확한 영화 명을 입력하여주십시오. </label>\\r\\n      <input class=\\\"form-control\\\" [(ngModel)]=\\\"inputTitle\\\" name=\\\"inputTitle\\\" placeholder=\\\"ex)보헤미안 랩소디\\\">\\r\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">검색</button>\\r\\n    </div>\\r\\n    </form>\\r\\n    <div class=\\\"form-group\\\" *ngIf=\\\"searched\\\">\\r\\n      <img src=\\\"https://image.tmdb.org/t/p/w185_and_h278_bestv2{{detailInfo.poster}}\\\" alt=\\\"\\\">\\r\\n      <h4>제목 : {{movie.title}}</h4>\\r\\n      <h4>영제 : {{movie.subtitle}}</h4>\\r\\n      <h4>감독 : {{movie.director}}</h4>\\r\\n      <h4>제작 국가 : {{movie.country}}</h4>\\r\\n      <h4>장르 : {{movie.genre}}</h4>\\r\\n      <h4>개봉 날짜 : {{detailInfo.pubDate}}</h4>\\r\\n      <h4>평균 별점 : {{detailInfo.rate}}</h4>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\nimport { MovieService } from '../../services/movie.service';\nimport { FlashMessagesService } from 'angular2-flash-messages';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.css']\n})\nexport class SearchComponent implements OnInit {\n  searched:boolean = false;\n  movie:Object;\n  inputTitle:string;\n  detailInfo:Object\n\n\n\n\n  constructor(\n    private movieService: MovieService,\n    private flashMessage: FlashMessagesService\n  ) {}\n\n  ngOnInit() {\n  }\n  searchMovie() {\n    const title = {\n      title: this.inputTitle\n    }\n    this.movieService.getMovieInfo(title).subscribe(data => {\n      if (data.success) {\n        this.movieService.getImage(title).subscribe(data => {\n          if(data.success) {\n            this.detailInfo = data.movie;\n          }\n        });\n        this.searched = true;\n        this.flashMessage.show(\"검색 완료\", {cssClass:'alert-success', timeout:5000});\n        this.movie = data.movie;\n        }\n        else {\n          this.flashMessage.show(\"찾지 못했습니다. \", {cssClass:'alert-danger', timeout:5000});\n        }\n      });\n    }\n  }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdXNlcml0ZW0vdXNlcml0ZW0uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<p>\\n  Hello {{name}}\\n</p>\\n\"","import {\n  Component,\n  OnInit,\n  Input //입력값 받는 라이브러리\n} from '@angular/core';\n\n@Component({\n  selector: 'app-useritem',\n  templateUrl: './useritem.component.html',\n  styleUrls: ['./useritem.component.css']\n})\nexport class UseritemComponent implements OnInit {\n  @Input() name:string;//input으로 name에 입력을 받음\n  constructor() {\n\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdXNlcmxpc3QvdXNlcmxpc3QuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<ul>\\n  <li *ngFor=\\\"let foo of names\\\">\\n    <!--\\n    names는 ts파일에서 가져온 값을 의미 즉, 컴포넌트에서 가져온 프로퍼티\\n    그러므로 names의 이름을 여기서만 바꾸면 오류가 발생 names의 이름을 바꾸고 싶으면 컴포넌트에서도 바꿔줘야함\\n    foo는 현재 페이지에서 생성한 변수\\n    ngFor는 템플릿에서 반복문을 처리하는 지시자\\n  -->\\n    <app-useritem [name]=\\\"foo\\\"></app-useritem>\\n    <!--\\n    foo는 위에서 선언한 변수 현재 템플릿에서만 사용\\n    [name]은 useritem 컴포넌트로 값을 전달\\n    그러므로 여기서 [name]을 [name1]로 바꿔서 쓰고싶다면 useritem 템플릿과 컴포넌트에서 바꿔줘야함\\n    데이터의 흐름을 정리하면 다음과 같다\\n    userlist컴포넌트의 names -> foo -> [name]\\n  -->\\n\\n  </li>\\n</ul>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-userlist',\n  templateUrl: './userlist.component.html',\n  styleUrls: ['./userlist.component.css']\n})\nexport class UserlistComponent implements OnInit {\nnames:string[];\n  constructor() {\n    this.names = ['Ari', 'Carlos', 'Felipe', 'Nate'];\n  }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate } from '@angular/router';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private authService: AuthService, private router: Router) {\r\n  }\r\n\r\n  canActivate(){\r\n    if(this.authService.loggedIn()){\r\n      return true;\r\n    } else {\r\n      this.router.navigate(['/login']);\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { Http, Headers } from '@angular/http';\nimport { map } from \"rxjs/operators\";\nimport { tokenNotExpired } from 'angular2-jwt';\n\nimport * as forge from 'node-forge';\nvar pki = forge.pki;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  pToken: any;\n  sToken: any;\n  authToken: any;\n  user: any;\n\n  constructor(private http: Http) { }\n\n  certRequest(request) {\n    var keypair = pki.rsa.generateKeyPair(2048);\n    var publicKey = keypair.publicKey;\n    var privateKey = keypair.privateKey;\n    var privateKeyPem = pki.privateKeyToPem(privateKey);\n    var publicKeyPem = pki.publicKeyToPem(publicKey);\n    var user1 = JSON.parse(localStorage.getItem('user')).username;\n    if(request.common != user1) {\n\n    }else {\n      localStorage.setItem('privateKey', privateKeyPem);\n\n      const req = {\n        country:request.country,\n        state:request.state,\n        locality:request.locality,\n        organization:request.organization,\n        orgUnit:request.orgUnit,\n        common:request.common,\n        publicKey:publicKeyPem\n      }\n      let headers = new Headers();\n      headers.append('Content-Type', 'application/json');\n      let ep = this.prepEndpoint('users/cert');\n      return this.http.post(ep, req, {headers:headers}).pipe(map(res => res.json()));\n    }\n  }\n\n  storeCert(cert, caCert) {\n    localStorage.setItem('cert', cert);\n    localStorage.setItem('caCert', caCert);\n  }\n\n  getKey(currT, stoken) {\n    var md = forge.md.sha256.create();\n    md.update(currT + stoken);\n    return md.digest().toHex();\n  }\n  encryptedMessage(encrypted, currentTime, ptoken) {\n    let headers = new Headers();\n    headers.append('Authorization', ptoken);\n    headers.append('Ctime', currentTime);\n    headers.append('Enc', encrypted);\n    headers.append('Content-Type', 'application/json');\n\n    let ep = this.prepEndpoint('users/encrypt');\n    return this.http.get(ep, { headers: headers }).pipe(map(res => res.json()));\n  }\n\n  getEncrypt(plaintext, key) {\n    var plaintextUtf8 = forge.util.encodeUtf8(plaintext);\n    var key1 = forge.util.hexToBytes(key);\n    var cipher = forge.cipher.createCihpher('AES-ECB', key1);\n    cipher.start();\n    cipher.update(forge.util.createBuffer(plaintextUtf8, 'binary'));\n    cipher.finish();\n    var ciphertext = cipher.output;\n    return forge.util.bytesToHex(ciphertext);\n  }\n\n  getCurrTime() {\n    return new Date().getTime();\n  }\n\n  getPubToken() {\n    console.log('ptoken in auth.service = ' + localStorage.getItem('id_ptoken'));\n    return localStorage.getItem('id_ptoken');\n  }\n\n  getSecToken() {\n    console.log('stoken in auth.service = ' + localStorage.getItem('id_stoken'));\n    return localStorage.getItem('id_stoken');\n  }\n\n  computeAuth(currT, stoken) {\n    var md = forge.md.sha256.create();\n    md.update(currT + stoken);\n    return md.digest().toHex();\n  }\n\n  registerUser(user) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    let ep = this.prepEndpoint('users/register');\n    return this.http.post(ep, user, { headers: headers })\n      //return this.http.post(\"users/register\", user, { headers: headers })\n      .pipe(map(res => res.json()));\n  }\n\n  authenticateUser(user) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    let ep = this.prepEndpoint('users/authenticate');\n    return this.http.post(ep, user, { headers: headers })\n      //return this.http.post(\"users/authenticate\", user, { headers: headers })\n      .pipe(map(res => res.json()));\n  }\n\n  getProfile(ptoken, currT, auth) {\n    let headers = new Headers();\n    this.loadToken();\n    headers.append('Authorization', this.authToken);\n    headers.append('Aujthorization', ptoken);\n    headers.append('Ctime', currT);\n    headers.append('Auth', auth);\n    headers.append('Content-Type', 'application/json');\n    let ep = this.prepEndpoint('users/profile');\n    return this.http.get(ep, { headers: headers })\n      //return this.http.get(\"users/profile\", { headers: headers })\n      .pipe(map(res => res.json()));\n  }\n\n  storeUserData(ptoken, stoken, user) {\n    localStorage.setItem('id_ptoken', ptoken);\n    localStorage.setItem('id_stoken', stoken);\n    localStorage.setItem('user', JSON.stringify(user));\n    this.pToken = ptoken;\n    this.sToken = stoken;\n    this.user = user;\n  }\n\n  loadToken() {\n    const ptoken = localStorage.getItem('id_ptoken');\n    const stoken = localStorage.getItem('id_stoken');\n\n    this.pToken = ptoken;\n    this.sToken = stoken;\n  }\n\n  logout() {\n    this.pToken = null;\n    this.sToken = null;\n    this.user = null;\n    localStorage.clear();\n  }\n\n  loggedIn() {\n    // return tokenNotExpired();\n    return tokenNotExpired('id_ptoken');\n  }\n\n  prepEndpoint(ep) {\n    return 'http://localhost:3000/' + ep;\n    //return 'https://localhost:3000/' + ep;\n    //return 'http://isweb.joongbu.ac.kr:21000/' + ep;\n  }\n\n\n}\n","import { Http, Headers } from '@angular/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class MovieService {\n  constructor(private http: Http) {}\n\n  getMovieInfo(title) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    let ep = this.prepEndpoint('movies/findmovie');\n    return this.http.post(ep, title, {headers:headers})\n    //return this.http.post(\"movies/findmovie\", title, {headers:headers})\n      .pipe(map(res => res.json()));\n  }\n\n  getImage(title) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    let ep = this.prepEndpoint('movies/getImage');\n    return this.http.post(ep, title, {headers:headers})\n    //return this.http.post(\"movies/findmovie\", title, {headers:headers})\n      .pipe(map(res => res.json()));\n  }\n\n  prepEndpoint(ep) {\n    return 'http://localhost:3000/' + ep;\n    //return 'https://localhost:3000/' + ep;\n    //return 'http://isweb.joongbu.ac.kr:21000/' + ep;\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidateService {\n\n  constructor() { }\n\n  validateRegister(user) {\n    if(user.name == undefined || user.email == undefined || user.username == undefined ||\u000b      user.password == undefined) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n \n  validateEmail(email) {\n    var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n","/* (ignored) */"],"sourceRoot":""}